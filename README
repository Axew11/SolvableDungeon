Directions

Input Phase:
The dungeon is made up of rooms. Each room has a letter engraved on the
ground, a button to push, and two doors leading from it to the left
(southwest) and right (southeast). 
The dungeon has an interesting property that the letter on the ground of every
room is lower to the left (southwest) and higher to the right (southeast).
This means you can represent the dungeon as a binary search tree (BST).

The input takes the form of a series of letters, followed by a number to
indicate the end of input (the number is not added to the dungeon). Each
letter is inserted into the dungeon in order, with one room created per
letter.

Example input: BDCAF6
This would create a dungeon that looks like this:
      	  B
	 / \
	A   D
	   / \
      	  C   F

Solving Phase:
The user will then type in a password, a string of characters. The end of input is
designated by hitting ctrl-d, which sends the EOF character to the input.

First, the program will check to see if the maze is solvable. For example, if the
password for the dungeon above was "ABCDZZZ", this would not be solvable,
since there is no room Z in the maze and would print "NOT SOLVABLE\n".

If the maze is solvable, then the program will take the appropriate amount of steps
to solve it.

The player will start at the root of the tree.

If you the player reaches the spot where the letter is found, the program will print:
"Found LETTER. Retrace your steps to the entrance.\n"
(Where LETTER is the letter you were searching for.)

If the room the player is looking for is to the left, the program will print:
"Take the left door at the LETTER.\n"
and then recursively repeat the algorithm to the left.
(LETTER is the letter on the ground in that room)

If the room the player is looking for is to the right, the program will print:
"Take the right door at the LETTER.\n"
and then recursively repeat the algorithm to the right.

After all the directions have been printed to all of the letters in the password,
the program will print:
"Exit the dungeon!\n";

And quit.

